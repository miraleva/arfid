<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="Sayfa açıklaması — SEO ve paylaşımlar için kısa özet."
    />
    <meta name="author" content="İsim veya kurum" />

    <title>SignUp</title>

    <!-- Favicon -->
    <link rel="icon" href="/favicon.ico" />

    <!-- CSS -->
    <link rel="stylesheet" href="signUp.css" />
  </head>
  <body>
    <div class="container">
      <div class="leftist">
        <div class="title">Create an account</div>
        <div class="subtitle">Start your journey</div>
          <form id="signUpForm">
          <label for="email">Email</label>
          <input type="text" id="email" name="email" placeholder="Enter your email" required />
          <div id="emailWarning" class="warning"></div>

          <br /><br />
          
          <label for="username">Username</label>
          <input type="text" id="username" name="username" placeholder="Enter your username" required />
          <div id="usernameWarning" class="warning"></div>

          <br /><br />

          <label for="password">Password</label>
          <input type="password" id="password" name="password" placeholder="Enter your password" required />
          <div id="passwordWarning" class="warning"></div>

          <br /><br />

          <label for="passwordAgain">Password Again</label>
          <input type="password" id="passwordAgain" name="passwordAgain" placeholder="Enter your password" required />
          <div id="passwordAgainWarning" class="warning"></div>

          <br /><br />

          <button type="submit">Sign up</button>

            <p class="already">Already have an account? 
            <a class="signLink" href="/signIn">Sign In</a>
            </p>

          
        </form>
        </div>
          
       <img  src="image/dish.png" id="dish"  alt="disges" >
      </div>
   
    </div>

    <!-- JS: modül biçiminde modern yükleme -->
    <script type="module" src="/js/app.js"></script>

    <!-- Eski tarayıcılar için (opsiyonel) -->
    <!-- <script nomodule src="/js/legacy.js"></script> -->
    
    <script>
        document.getElementById('signUpForm').addEventListener('submit', async function(e) {
            e.preventDefault(); // Prevent default form submission
            
            const email = document.getElementById('email').value;
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const passwordAgain = document.getElementById('passwordAgain').value;
            
            const emailWarning = document.getElementById('emailWarning');
            const usernameWarning = document.getElementById('usernameWarning');
            const passwordWarning = document.getElementById('passwordWarning');
            const passwordAgainWarning = document.getElementById('passwordAgainWarning');
            
            let isValid = true;
            
            // Clear previous warnings
            emailWarning.textContent = '';
            usernameWarning.textContent = '';
            passwordWarning.textContent = '';
            passwordAgainWarning.textContent = '';
            
            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!email || !emailRegex.test(email)) {
                emailWarning.textContent = 'Please enter a valid email address';
                isValid = false;
            }
            
            // Username validation
            if (!username || username.length < 3) {
                usernameWarning.textContent = 'Username must be at least 3 characters long';
                isValid = false;
            } else if (username.length > 20) {
                usernameWarning.textContent = 'Username must be less than 20 characters';
                isValid = false;
            }
            
            // Password validation
            if (!password || password.length < 6) {
                passwordWarning.textContent = 'Password must be at least 6 characters long';
                isValid = false;
            } else if (password.length > 50) {
                passwordWarning.textContent = 'Password must be less than 50 characters';
                isValid = false;
            }
            
            // Password confirmation validation
            if (!passwordAgain) {
                passwordAgainWarning.textContent = 'Please confirm your password';
                isValid = false;
            } else if (password !== passwordAgain) {
                passwordAgainWarning.textContent = 'Passwords do not match';
                isValid = false;
            }
            
            if (!isValid) {
                return;
            }
            
            // If validation passes, send data to backend using fetch
            try {
                const response = await fetch('/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email: email,
                        password: password,
                        username: username
                    })
                });
                console.log(response);

                if (response.ok) {
                    // Success - redirect to home page
                    window.location.href = '/';
                } else {
                    // Handle error response
                    const errorData = await response.text();
                    let errorMessage = 'Kayıt sırasında bir hata oluştu';
                    
                    try {
                        const errorJson = JSON.parse(errorData);
                        errorMessage = errorJson.error || errorMessage;
                    } catch (e) {
                        // If response is not JSON, use the text as error message
                        errorMessage = errorData || errorMessage;
                    }
                    
                    // Display error message
                    emailWarning.textContent = errorMessage;
                }
            } catch (error) {
                console.error('Fetch error:', error);
                emailWarning.textContent = 'Bağlantı hatası. Lütfen tekrar deneyin.';
            }
        });
        
        // Clear warnings when user starts typing
        document.getElementById('email').addEventListener('input', function() {
            document.getElementById('emailWarning').textContent = '';
        });
        
        document.getElementById('username').addEventListener('input', function() {
            document.getElementById('usernameWarning').textContent = '';
        });
        
        document.getElementById('password').addEventListener('input', function() {
            document.getElementById('passwordWarning').textContent = '';
            // Also clear password confirmation warning when password changes
            document.getElementById('passwordAgainWarning').textContent = '';
        });
        
        document.getElementById('passwordAgain').addEventListener('input', function() {
            document.getElementById('passwordAgainWarning').textContent = '';
        });
    </script>
  </body>
</html>
